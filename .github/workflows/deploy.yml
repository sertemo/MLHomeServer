name: Deploy

on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'data/**'
      - 'config.yml'
      - 'pyproject.toml'

jobs:
  docker-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sertemo/mlhomeserver:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_SSH_HOST }}
          username: ${{ secrets.SERVER_SSH_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            # Detener y eliminar el contenedor si ya está corriendo
            if docker ps -a --format '{{.Names}}' | grep -q "^mlhomeserver$"; then
              docker stop mlhomeserver
              docker rm mlhomeserver
            fi

            # Descargar la última imagen
            docker pull sertemo/mlhomeserver:latest

            # Crear y ejecutar el nuevo contenedor
            docker run --restart unless-stopped -d -p 5000:5000 --name mlhomeserver \
              -v /path/to/models:/app/models \
              -v /path/to/logs:/app/logs \
              sertemo/mlhomeserver:latest

            # Limpieza de imágenes no utilizadas
            docker image prune -f --filter "until=24h"

